data List a =
       | Nil
       | Cons a (List a)
fold : forall a b. (b -> a -> b) -> b -> List a -> b =
  fun @a @b ->
    fun (f : b -> a -> b) ->
      fun (y0 : b) ->
        fun (xs : List a) ->
          match xs with
          | Nil -> y0
          | Cons x xs -> fold @a @b f (f y0 x) xs

data List a =
       | Nil
       | Cons a (List a)
fold :: forall a b. (b -> a -> b) -> b -> List a -> b =
  \@a @b ->
    \(f :: b -> a -> b) ->
      \(y0 :: b) ->
        \(xs :: List a) ->
          case xs of
          | Nil -> y0
          | Cons x xs -> fold @a @b f (f y0 x) xs

-- Fundamental functions
abort :: a
external abort = "abort"

-- Fundamental types
data Unit =
  | Unit

data Bool =
  | False
  | True

data Pair a b =
  | Pair a b

data Option a =
  | None
  | Some a

data Choice a b =
  | First a
  | Second b

-- Fundamental classes
class Eq a where
  eq :: a -> a -> Bool

infix == eq

neq :: (Eq a) => a -> a -> Bool
neq x y = if x == y then False else True

infix != neq

-- Fundamental functions
id :: a -> a
id x = x

compose :: (b -> c) -> (a -> b) -> (a -> c)
compose f g x = f (g x)

infix âˆ˜ compose

-- Multi-sets represented by (unbalanced) binary trees
import std2/bintree

type Bag a = BinTree a

instance foldableBag : Foldable Bag where
  foldr f y0 bag = foldr f y0 (coerce @(Bag -> _) bag)
  foldl f y0 bag = foldl f y0 (coerce @(Bag -> _) bag)

bag_empty : Bag a
bag_empty = coerce @(_ -> Bag) Leaf

bag_insert : (Ord a) => a -> Bag a -> Bag a
bag_insert x s =
  let rec insert x t =
    match t with
    | Leaf -> Branch Leaf x Leaf
    | Branch l y r ->
      if x < y then Branch (insert x l) y r
      else Branch l y (insert x r)
  in
  coerce @(_ -> Bag) (insert x (coerce @(Bag -> _) s))

let prime = 1000000*1000000+39 in
let double_mod_prime x =
  let y = 2*x in
  if y < prime then y else y-prime
in
letrec gen f x = Cons x (gen f (f x)) in
let powers = gen double_mod_prime 1 in
let sum = foldr prefix_add 0 in
let mul_mod_prime x y = (x*y) % prime in
let sum_prod xs ys = sum (zip_with mul_mod_prime xs ys) in
let hash xs = sum_prod xs powers % prime in
let numbers = take 10006 (gen (fun x -> (42*x) % 10007) 1) in
letrec insert y xs =
  match xs with
  | Nil -> Cons y Nil
  | Cons x xs' ->
    if y <= x then
      Cons y xs
    else
      Cons x (insert y xs')
in
letrec isort xs =
  match xs with
  | Nil -> Nil
  | Cons x xs -> insert x (isort xs)
in
let main = print (hash (isort numbers)) in
main
